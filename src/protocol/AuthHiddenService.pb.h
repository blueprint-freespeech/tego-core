// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AuthHiddenService.proto

#ifndef PROTOBUF_AuthHiddenService_2eproto__INCLUDED
#define PROTOBUF_AuthHiddenService_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ControlChannel.pb.h"
// @@protoc_insertion_point(includes)

namespace Protocol {
namespace Data {
namespace AuthHiddenService {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_AuthHiddenService_2eproto();
void protobuf_AssignDesc_AuthHiddenService_2eproto();
void protobuf_ShutdownFile_AuthHiddenService_2eproto();

class Packet;
class Proof;
class Result;

// ===================================================================

class Packet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol.Data.AuthHiddenService.Packet) */ {
 public:
  Packet();
  virtual ~Packet();

  Packet(const Packet& from);

  inline Packet& operator=(const Packet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Packet& default_instance();

  void Swap(Packet* other);

  // implements Message ----------------------------------------------

  inline Packet* New() const { return New(NULL); }

  Packet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Packet& from);
  void MergeFrom(const Packet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Packet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Protocol.Data.AuthHiddenService.Proof proof = 1;
  bool has_proof() const;
  void clear_proof();
  static const int kProofFieldNumber = 1;
  const ::Protocol::Data::AuthHiddenService::Proof& proof() const;
  ::Protocol::Data::AuthHiddenService::Proof* mutable_proof();
  ::Protocol::Data::AuthHiddenService::Proof* release_proof();
  void set_allocated_proof(::Protocol::Data::AuthHiddenService::Proof* proof);

  // optional .Protocol.Data.AuthHiddenService.Result result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  const ::Protocol::Data::AuthHiddenService::Result& result() const;
  ::Protocol::Data::AuthHiddenService::Result* mutable_result();
  ::Protocol::Data::AuthHiddenService::Result* release_result();
  void set_allocated_result(::Protocol::Data::AuthHiddenService::Result* result);

  // @@protoc_insertion_point(class_scope:Protocol.Data.AuthHiddenService.Packet)
 private:
  inline void set_has_proof();
  inline void clear_has_proof();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Protocol::Data::AuthHiddenService::Proof* proof_;
  ::Protocol::Data::AuthHiddenService::Result* result_;
  friend void  protobuf_AddDesc_AuthHiddenService_2eproto();
  friend void protobuf_AssignDesc_AuthHiddenService_2eproto();
  friend void protobuf_ShutdownFile_AuthHiddenService_2eproto();

  void InitAsDefaultInstance();
  static Packet* default_instance_;
};
// -------------------------------------------------------------------

class Proof : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol.Data.AuthHiddenService.Proof) */ {
 public:
  Proof();
  virtual ~Proof();

  Proof(const Proof& from);

  inline Proof& operator=(const Proof& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proof& default_instance();

  void Swap(Proof* other);

  // implements Message ----------------------------------------------

  inline Proof* New() const { return New(NULL); }

  Proof* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proof& from);
  void MergeFrom(const Proof& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proof* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes public_key = 1;
  bool has_public_key() const;
  void clear_public_key();
  static const int kPublicKeyFieldNumber = 1;
  const ::std::string& public_key() const;
  void set_public_key(const ::std::string& value);
  void set_public_key(const char* value);
  void set_public_key(const void* value, size_t size);
  ::std::string* mutable_public_key();
  ::std::string* release_public_key();
  void set_allocated_public_key(::std::string* public_key);

  // optional bytes signature = 2;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 2;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:Protocol.Data.AuthHiddenService.Proof)
 private:
  inline void set_has_public_key();
  inline void clear_has_public_key();
  inline void set_has_signature();
  inline void clear_has_signature();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr public_key_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  friend void  protobuf_AddDesc_AuthHiddenService_2eproto();
  friend void protobuf_AssignDesc_AuthHiddenService_2eproto();
  friend void protobuf_ShutdownFile_AuthHiddenService_2eproto();

  void InitAsDefaultInstance();
  static Proof* default_instance_;
};
// -------------------------------------------------------------------

class Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol.Data.AuthHiddenService.Result) */ {
 public:
  Result();
  virtual ~Result();

  Result(const Result& from);

  inline Result& operator=(const Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Result& default_instance();

  void Swap(Result* other);

  // implements Message ----------------------------------------------

  inline Result* New() const { return New(NULL); }

  Result* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Result& from);
  void MergeFrom(const Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool accepted = 1;
  bool has_accepted() const;
  void clear_accepted();
  static const int kAcceptedFieldNumber = 1;
  bool accepted() const;
  void set_accepted(bool value);

  // optional bool is_known_contact = 2;
  bool has_is_known_contact() const;
  void clear_is_known_contact();
  static const int kIsKnownContactFieldNumber = 2;
  bool is_known_contact() const;
  void set_is_known_contact(bool value);

  // @@protoc_insertion_point(class_scope:Protocol.Data.AuthHiddenService.Result)
 private:
  inline void set_has_accepted();
  inline void clear_has_accepted();
  inline void set_has_is_known_contact();
  inline void clear_has_is_known_contact();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool accepted_;
  bool is_known_contact_;
  friend void  protobuf_AddDesc_AuthHiddenService_2eproto();
  friend void protobuf_AssignDesc_AuthHiddenService_2eproto();
  friend void protobuf_ShutdownFile_AuthHiddenService_2eproto();

  void InitAsDefaultInstance();
  static Result* default_instance_;
};
// ===================================================================

static const int kClientCookieFieldNumber = 7200;
extern ::google::protobuf::internal::ExtensionIdentifier< ::Protocol::Data::Control::OpenChannel,
    ::google::protobuf::internal::StringTypeTraits, 12, false >
  client_cookie;
static const int kServerCookieFieldNumber = 7200;
extern ::google::protobuf::internal::ExtensionIdentifier< ::Protocol::Data::Control::ChannelResult,
    ::google::protobuf::internal::StringTypeTraits, 12, false >
  server_cookie;

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Packet

// optional .Protocol.Data.AuthHiddenService.Proof proof = 1;
inline bool Packet::has_proof() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Packet::set_has_proof() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Packet::clear_has_proof() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Packet::clear_proof() {
  if (proof_ != NULL) proof_->::Protocol::Data::AuthHiddenService::Proof::Clear();
  clear_has_proof();
}
inline const ::Protocol::Data::AuthHiddenService::Proof& Packet::proof() const {
  // @@protoc_insertion_point(field_get:Protocol.Data.AuthHiddenService.Packet.proof)
  return proof_ != NULL ? *proof_ : *default_instance_->proof_;
}
inline ::Protocol::Data::AuthHiddenService::Proof* Packet::mutable_proof() {
  set_has_proof();
  if (proof_ == NULL) {
    proof_ = new ::Protocol::Data::AuthHiddenService::Proof;
  }
  // @@protoc_insertion_point(field_mutable:Protocol.Data.AuthHiddenService.Packet.proof)
  return proof_;
}
inline ::Protocol::Data::AuthHiddenService::Proof* Packet::release_proof() {
  // @@protoc_insertion_point(field_release:Protocol.Data.AuthHiddenService.Packet.proof)
  clear_has_proof();
  ::Protocol::Data::AuthHiddenService::Proof* temp = proof_;
  proof_ = NULL;
  return temp;
}
inline void Packet::set_allocated_proof(::Protocol::Data::AuthHiddenService::Proof* proof) {
  delete proof_;
  proof_ = proof;
  if (proof) {
    set_has_proof();
  } else {
    clear_has_proof();
  }
  // @@protoc_insertion_point(field_set_allocated:Protocol.Data.AuthHiddenService.Packet.proof)
}

// optional .Protocol.Data.AuthHiddenService.Result result = 2;
inline bool Packet::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Packet::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Packet::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Packet::clear_result() {
  if (result_ != NULL) result_->::Protocol::Data::AuthHiddenService::Result::Clear();
  clear_has_result();
}
inline const ::Protocol::Data::AuthHiddenService::Result& Packet::result() const {
  // @@protoc_insertion_point(field_get:Protocol.Data.AuthHiddenService.Packet.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::Protocol::Data::AuthHiddenService::Result* Packet::mutable_result() {
  set_has_result();
  if (result_ == NULL) {
    result_ = new ::Protocol::Data::AuthHiddenService::Result;
  }
  // @@protoc_insertion_point(field_mutable:Protocol.Data.AuthHiddenService.Packet.result)
  return result_;
}
inline ::Protocol::Data::AuthHiddenService::Result* Packet::release_result() {
  // @@protoc_insertion_point(field_release:Protocol.Data.AuthHiddenService.Packet.result)
  clear_has_result();
  ::Protocol::Data::AuthHiddenService::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void Packet::set_allocated_result(::Protocol::Data::AuthHiddenService::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:Protocol.Data.AuthHiddenService.Packet.result)
}

// -------------------------------------------------------------------

// Proof

// optional bytes public_key = 1;
inline bool Proof::has_public_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proof::set_has_public_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proof::clear_has_public_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proof::clear_public_key() {
  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_public_key();
}
inline const ::std::string& Proof::public_key() const {
  // @@protoc_insertion_point(field_get:Protocol.Data.AuthHiddenService.Proof.public_key)
  return public_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proof::set_public_key(const ::std::string& value) {
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Protocol.Data.AuthHiddenService.Proof.public_key)
}
inline void Proof::set_public_key(const char* value) {
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Protocol.Data.AuthHiddenService.Proof.public_key)
}
inline void Proof::set_public_key(const void* value, size_t size) {
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Protocol.Data.AuthHiddenService.Proof.public_key)
}
inline ::std::string* Proof::mutable_public_key() {
  set_has_public_key();
  // @@protoc_insertion_point(field_mutable:Protocol.Data.AuthHiddenService.Proof.public_key)
  return public_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proof::release_public_key() {
  // @@protoc_insertion_point(field_release:Protocol.Data.AuthHiddenService.Proof.public_key)
  clear_has_public_key();
  return public_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proof::set_allocated_public_key(::std::string* public_key) {
  if (public_key != NULL) {
    set_has_public_key();
  } else {
    clear_has_public_key();
  }
  public_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key);
  // @@protoc_insertion_point(field_set_allocated:Protocol.Data.AuthHiddenService.Proof.public_key)
}

// optional bytes signature = 2;
inline bool Proof::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proof::set_has_signature() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proof::clear_has_signature() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proof::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
inline const ::std::string& Proof::signature() const {
  // @@protoc_insertion_point(field_get:Protocol.Data.AuthHiddenService.Proof.signature)
  return signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proof::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Protocol.Data.AuthHiddenService.Proof.signature)
}
inline void Proof::set_signature(const char* value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Protocol.Data.AuthHiddenService.Proof.signature)
}
inline void Proof::set_signature(const void* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Protocol.Data.AuthHiddenService.Proof.signature)
}
inline ::std::string* Proof::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:Protocol.Data.AuthHiddenService.Proof.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proof::release_signature() {
  // @@protoc_insertion_point(field_release:Protocol.Data.AuthHiddenService.Proof.signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proof::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:Protocol.Data.AuthHiddenService.Proof.signature)
}

// -------------------------------------------------------------------

// Result

// required bool accepted = 1;
inline bool Result::has_accepted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Result::set_has_accepted() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Result::clear_has_accepted() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Result::clear_accepted() {
  accepted_ = false;
  clear_has_accepted();
}
inline bool Result::accepted() const {
  // @@protoc_insertion_point(field_get:Protocol.Data.AuthHiddenService.Result.accepted)
  return accepted_;
}
inline void Result::set_accepted(bool value) {
  set_has_accepted();
  accepted_ = value;
  // @@protoc_insertion_point(field_set:Protocol.Data.AuthHiddenService.Result.accepted)
}

// optional bool is_known_contact = 2;
inline bool Result::has_is_known_contact() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Result::set_has_is_known_contact() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Result::clear_has_is_known_contact() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Result::clear_is_known_contact() {
  is_known_contact_ = false;
  clear_has_is_known_contact();
}
inline bool Result::is_known_contact() const {
  // @@protoc_insertion_point(field_get:Protocol.Data.AuthHiddenService.Result.is_known_contact)
  return is_known_contact_;
}
inline void Result::set_is_known_contact(bool value) {
  set_has_is_known_contact();
  is_known_contact_ = value;
  // @@protoc_insertion_point(field_set:Protocol.Data.AuthHiddenService.Result.is_known_contact)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace AuthHiddenService
}  // namespace Data
}  // namespace Protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AuthHiddenService_2eproto__INCLUDED
