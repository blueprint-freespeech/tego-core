// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChatChannel.proto

#ifndef PROTOBUF_ChatChannel_2eproto__INCLUDED
#define PROTOBUF_ChatChannel_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Protocol {
namespace Data {
namespace Chat {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ChatChannel_2eproto();
void protobuf_AssignDesc_ChatChannel_2eproto();
void protobuf_ShutdownFile_ChatChannel_2eproto();

class ChatAcknowledge;
class ChatMessage;
class Packet;

// ===================================================================

class Packet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol.Data.Chat.Packet) */ {
 public:
  Packet();
  virtual ~Packet();

  Packet(const Packet& from);

  inline Packet& operator=(const Packet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Packet& default_instance();

  void Swap(Packet* other);

  // implements Message ----------------------------------------------

  inline Packet* New() const { return New(NULL); }

  Packet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Packet& from);
  void MergeFrom(const Packet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Packet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Protocol.Data.Chat.ChatMessage chat_message = 1;
  bool has_chat_message() const;
  void clear_chat_message();
  static const int kChatMessageFieldNumber = 1;
  const ::Protocol::Data::Chat::ChatMessage& chat_message() const;
  ::Protocol::Data::Chat::ChatMessage* mutable_chat_message();
  ::Protocol::Data::Chat::ChatMessage* release_chat_message();
  void set_allocated_chat_message(::Protocol::Data::Chat::ChatMessage* chat_message);

  // optional .Protocol.Data.Chat.ChatAcknowledge chat_acknowledge = 2;
  bool has_chat_acknowledge() const;
  void clear_chat_acknowledge();
  static const int kChatAcknowledgeFieldNumber = 2;
  const ::Protocol::Data::Chat::ChatAcknowledge& chat_acknowledge() const;
  ::Protocol::Data::Chat::ChatAcknowledge* mutable_chat_acknowledge();
  ::Protocol::Data::Chat::ChatAcknowledge* release_chat_acknowledge();
  void set_allocated_chat_acknowledge(::Protocol::Data::Chat::ChatAcknowledge* chat_acknowledge);

  // @@protoc_insertion_point(class_scope:Protocol.Data.Chat.Packet)
 private:
  inline void set_has_chat_message();
  inline void clear_has_chat_message();
  inline void set_has_chat_acknowledge();
  inline void clear_has_chat_acknowledge();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Protocol::Data::Chat::ChatMessage* chat_message_;
  ::Protocol::Data::Chat::ChatAcknowledge* chat_acknowledge_;
  friend void  protobuf_AddDesc_ChatChannel_2eproto();
  friend void protobuf_AssignDesc_ChatChannel_2eproto();
  friend void protobuf_ShutdownFile_ChatChannel_2eproto();

  void InitAsDefaultInstance();
  static Packet* default_instance_;
};
// -------------------------------------------------------------------

class ChatMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol.Data.Chat.ChatMessage) */ {
 public:
  ChatMessage();
  virtual ~ChatMessage();

  ChatMessage(const ChatMessage& from);

  inline ChatMessage& operator=(const ChatMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatMessage& default_instance();

  void Swap(ChatMessage* other);

  // implements Message ----------------------------------------------

  inline ChatMessage* New() const { return New(NULL); }

  ChatMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatMessage& from);
  void MergeFrom(const ChatMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChatMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string message_text = 1;
  bool has_message_text() const;
  void clear_message_text();
  static const int kMessageTextFieldNumber = 1;
  const ::std::string& message_text() const;
  void set_message_text(const ::std::string& value);
  void set_message_text(const char* value);
  void set_message_text(const char* value, size_t size);
  ::std::string* mutable_message_text();
  ::std::string* release_message_text();
  void set_allocated_message_text(::std::string* message_text);

  // optional uint32 message_id = 2;
  bool has_message_id() const;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 2;
  ::google::protobuf::uint32 message_id() const;
  void set_message_id(::google::protobuf::uint32 value);

  // optional int64 time_delta = 3;
  bool has_time_delta() const;
  void clear_time_delta();
  static const int kTimeDeltaFieldNumber = 3;
  ::google::protobuf::int64 time_delta() const;
  void set_time_delta(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Protocol.Data.Chat.ChatMessage)
 private:
  inline void set_has_message_text();
  inline void clear_has_message_text();
  inline void set_has_message_id();
  inline void clear_has_message_id();
  inline void set_has_time_delta();
  inline void clear_has_time_delta();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_text_;
  ::google::protobuf::int64 time_delta_;
  ::google::protobuf::uint32 message_id_;
  friend void  protobuf_AddDesc_ChatChannel_2eproto();
  friend void protobuf_AssignDesc_ChatChannel_2eproto();
  friend void protobuf_ShutdownFile_ChatChannel_2eproto();

  void InitAsDefaultInstance();
  static ChatMessage* default_instance_;
};
// -------------------------------------------------------------------

class ChatAcknowledge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol.Data.Chat.ChatAcknowledge) */ {
 public:
  ChatAcknowledge();
  virtual ~ChatAcknowledge();

  ChatAcknowledge(const ChatAcknowledge& from);

  inline ChatAcknowledge& operator=(const ChatAcknowledge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatAcknowledge& default_instance();

  void Swap(ChatAcknowledge* other);

  // implements Message ----------------------------------------------

  inline ChatAcknowledge* New() const { return New(NULL); }

  ChatAcknowledge* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatAcknowledge& from);
  void MergeFrom(const ChatAcknowledge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChatAcknowledge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 message_id = 1;
  bool has_message_id() const;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 1;
  ::google::protobuf::uint32 message_id() const;
  void set_message_id(::google::protobuf::uint32 value);

  // optional bool accepted = 2 [default = true];
  bool has_accepted() const;
  void clear_accepted();
  static const int kAcceptedFieldNumber = 2;
  bool accepted() const;
  void set_accepted(bool value);

  // @@protoc_insertion_point(class_scope:Protocol.Data.Chat.ChatAcknowledge)
 private:
  inline void set_has_message_id();
  inline void clear_has_message_id();
  inline void set_has_accepted();
  inline void clear_has_accepted();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 message_id_;
  bool accepted_;
  friend void  protobuf_AddDesc_ChatChannel_2eproto();
  friend void protobuf_AssignDesc_ChatChannel_2eproto();
  friend void protobuf_ShutdownFile_ChatChannel_2eproto();

  void InitAsDefaultInstance();
  static ChatAcknowledge* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Packet

// optional .Protocol.Data.Chat.ChatMessage chat_message = 1;
inline bool Packet::has_chat_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Packet::set_has_chat_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Packet::clear_has_chat_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Packet::clear_chat_message() {
  if (chat_message_ != NULL) chat_message_->::Protocol::Data::Chat::ChatMessage::Clear();
  clear_has_chat_message();
}
inline const ::Protocol::Data::Chat::ChatMessage& Packet::chat_message() const {
  // @@protoc_insertion_point(field_get:Protocol.Data.Chat.Packet.chat_message)
  return chat_message_ != NULL ? *chat_message_ : *default_instance_->chat_message_;
}
inline ::Protocol::Data::Chat::ChatMessage* Packet::mutable_chat_message() {
  set_has_chat_message();
  if (chat_message_ == NULL) {
    chat_message_ = new ::Protocol::Data::Chat::ChatMessage;
  }
  // @@protoc_insertion_point(field_mutable:Protocol.Data.Chat.Packet.chat_message)
  return chat_message_;
}
inline ::Protocol::Data::Chat::ChatMessage* Packet::release_chat_message() {
  // @@protoc_insertion_point(field_release:Protocol.Data.Chat.Packet.chat_message)
  clear_has_chat_message();
  ::Protocol::Data::Chat::ChatMessage* temp = chat_message_;
  chat_message_ = NULL;
  return temp;
}
inline void Packet::set_allocated_chat_message(::Protocol::Data::Chat::ChatMessage* chat_message) {
  delete chat_message_;
  chat_message_ = chat_message;
  if (chat_message) {
    set_has_chat_message();
  } else {
    clear_has_chat_message();
  }
  // @@protoc_insertion_point(field_set_allocated:Protocol.Data.Chat.Packet.chat_message)
}

// optional .Protocol.Data.Chat.ChatAcknowledge chat_acknowledge = 2;
inline bool Packet::has_chat_acknowledge() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Packet::set_has_chat_acknowledge() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Packet::clear_has_chat_acknowledge() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Packet::clear_chat_acknowledge() {
  if (chat_acknowledge_ != NULL) chat_acknowledge_->::Protocol::Data::Chat::ChatAcknowledge::Clear();
  clear_has_chat_acknowledge();
}
inline const ::Protocol::Data::Chat::ChatAcknowledge& Packet::chat_acknowledge() const {
  // @@protoc_insertion_point(field_get:Protocol.Data.Chat.Packet.chat_acknowledge)
  return chat_acknowledge_ != NULL ? *chat_acknowledge_ : *default_instance_->chat_acknowledge_;
}
inline ::Protocol::Data::Chat::ChatAcknowledge* Packet::mutable_chat_acknowledge() {
  set_has_chat_acknowledge();
  if (chat_acknowledge_ == NULL) {
    chat_acknowledge_ = new ::Protocol::Data::Chat::ChatAcknowledge;
  }
  // @@protoc_insertion_point(field_mutable:Protocol.Data.Chat.Packet.chat_acknowledge)
  return chat_acknowledge_;
}
inline ::Protocol::Data::Chat::ChatAcknowledge* Packet::release_chat_acknowledge() {
  // @@protoc_insertion_point(field_release:Protocol.Data.Chat.Packet.chat_acknowledge)
  clear_has_chat_acknowledge();
  ::Protocol::Data::Chat::ChatAcknowledge* temp = chat_acknowledge_;
  chat_acknowledge_ = NULL;
  return temp;
}
inline void Packet::set_allocated_chat_acknowledge(::Protocol::Data::Chat::ChatAcknowledge* chat_acknowledge) {
  delete chat_acknowledge_;
  chat_acknowledge_ = chat_acknowledge;
  if (chat_acknowledge) {
    set_has_chat_acknowledge();
  } else {
    clear_has_chat_acknowledge();
  }
  // @@protoc_insertion_point(field_set_allocated:Protocol.Data.Chat.Packet.chat_acknowledge)
}

// -------------------------------------------------------------------

// ChatMessage

// required string message_text = 1;
inline bool ChatMessage::has_message_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatMessage::set_has_message_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatMessage::clear_has_message_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatMessage::clear_message_text() {
  message_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message_text();
}
inline const ::std::string& ChatMessage::message_text() const {
  // @@protoc_insertion_point(field_get:Protocol.Data.Chat.ChatMessage.message_text)
  return message_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMessage::set_message_text(const ::std::string& value) {
  set_has_message_text();
  message_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Protocol.Data.Chat.ChatMessage.message_text)
}
inline void ChatMessage::set_message_text(const char* value) {
  set_has_message_text();
  message_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Protocol.Data.Chat.ChatMessage.message_text)
}
inline void ChatMessage::set_message_text(const char* value, size_t size) {
  set_has_message_text();
  message_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Protocol.Data.Chat.ChatMessage.message_text)
}
inline ::std::string* ChatMessage::mutable_message_text() {
  set_has_message_text();
  // @@protoc_insertion_point(field_mutable:Protocol.Data.Chat.ChatMessage.message_text)
  return message_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatMessage::release_message_text() {
  // @@protoc_insertion_point(field_release:Protocol.Data.Chat.ChatMessage.message_text)
  clear_has_message_text();
  return message_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMessage::set_allocated_message_text(::std::string* message_text) {
  if (message_text != NULL) {
    set_has_message_text();
  } else {
    clear_has_message_text();
  }
  message_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_text);
  // @@protoc_insertion_point(field_set_allocated:Protocol.Data.Chat.ChatMessage.message_text)
}

// optional uint32 message_id = 2;
inline bool ChatMessage::has_message_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatMessage::set_has_message_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatMessage::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatMessage::clear_message_id() {
  message_id_ = 0u;
  clear_has_message_id();
}
inline ::google::protobuf::uint32 ChatMessage::message_id() const {
  // @@protoc_insertion_point(field_get:Protocol.Data.Chat.ChatMessage.message_id)
  return message_id_;
}
inline void ChatMessage::set_message_id(::google::protobuf::uint32 value) {
  set_has_message_id();
  message_id_ = value;
  // @@protoc_insertion_point(field_set:Protocol.Data.Chat.ChatMessage.message_id)
}

// optional int64 time_delta = 3;
inline bool ChatMessage::has_time_delta() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatMessage::set_has_time_delta() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatMessage::clear_has_time_delta() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatMessage::clear_time_delta() {
  time_delta_ = GOOGLE_LONGLONG(0);
  clear_has_time_delta();
}
inline ::google::protobuf::int64 ChatMessage::time_delta() const {
  // @@protoc_insertion_point(field_get:Protocol.Data.Chat.ChatMessage.time_delta)
  return time_delta_;
}
inline void ChatMessage::set_time_delta(::google::protobuf::int64 value) {
  set_has_time_delta();
  time_delta_ = value;
  // @@protoc_insertion_point(field_set:Protocol.Data.Chat.ChatMessage.time_delta)
}

// -------------------------------------------------------------------

// ChatAcknowledge

// optional uint32 message_id = 1;
inline bool ChatAcknowledge::has_message_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatAcknowledge::set_has_message_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatAcknowledge::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatAcknowledge::clear_message_id() {
  message_id_ = 0u;
  clear_has_message_id();
}
inline ::google::protobuf::uint32 ChatAcknowledge::message_id() const {
  // @@protoc_insertion_point(field_get:Protocol.Data.Chat.ChatAcknowledge.message_id)
  return message_id_;
}
inline void ChatAcknowledge::set_message_id(::google::protobuf::uint32 value) {
  set_has_message_id();
  message_id_ = value;
  // @@protoc_insertion_point(field_set:Protocol.Data.Chat.ChatAcknowledge.message_id)
}

// optional bool accepted = 2 [default = true];
inline bool ChatAcknowledge::has_accepted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatAcknowledge::set_has_accepted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatAcknowledge::clear_has_accepted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatAcknowledge::clear_accepted() {
  accepted_ = true;
  clear_has_accepted();
}
inline bool ChatAcknowledge::accepted() const {
  // @@protoc_insertion_point(field_get:Protocol.Data.Chat.ChatAcknowledge.accepted)
  return accepted_;
}
inline void ChatAcknowledge::set_accepted(bool value) {
  set_has_accepted();
  accepted_ = value;
  // @@protoc_insertion_point(field_set:Protocol.Data.Chat.ChatAcknowledge.accepted)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Chat
}  // namespace Data
}  // namespace Protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ChatChannel_2eproto__INCLUDED
